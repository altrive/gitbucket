version: '{build}'
image: Visual Studio 2017
services:
  - mssql2016
  - postgresql
  - mysql
environment:
 global:
   ENABLE_RDP: true
   PGUSER: postgres
   PGPASSWORD: Password12!

branches:
  except: 
    - gh-pages
init:
  - ps: |
      if($env:ENABLE_RDP -eq "true") {
        # Add service account to "Remote Desktop Users" group (Required for RDP debugging)
        #net localgroup "Remote Desktop Users" appveyor /ADD
        # Enable Remote Desktop
        iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
      }
      # Remove appveyor account from Administrators group (Required to launch Embedded Postgres process)
      #net localgroup "Administrators" appveyor /DELETE
install:
  - ps: |
      # Set current directory
      (Get-PSProvider 'FileSystem').Home = 'c:\projects\'
      if(Test-Path scoop) {
         # Update existing scoop packages
         scoop update
         scoop update scala
         scoop update sbt
      }
      else {
        # Install scoop and packages
        iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
        scoop install scala
        scoop install sbt
      }
  - bat: |
        SET PATH=C:\Program Files\MySQL\MySQL Server 5.7\bin\mysql;%PATH%
        SET PATH=C:\Program Files\PostgreSQL\9.6\bin\;%PATH%
build_script:
  - sbt compile
test_script:
  - ps: |
      #MySQL database
      $env:MYSQL_PWD="Password12!"
      $cmd = 'mysql -e "create database GitBucket;" --user=root'
      Invoke-Expression "& $cmd"
      #PostgreSQL
      $env:SET PGUSER=postgres
      $env:SET PGPASSWORD=Password12!
      createdb GitBucket
  - sbt test
after_test:
  - ps: |
      $url = "https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)"
      $files = Get-ChildItem '.\target\test-reports\TEST-*.xml' -ErrorAction Ignore
      foreach ($file in $files) {
          (New-Object 'System.Net.WebClient').UploadFile($url, (Resolve-Path $file))
      }
  - sbt executable
artifacts:
  - path: target\executable\gitbucket.war
  - path: target\executable\gitbucket.war.md5
  - path: target\executable\gitbucket.war.sha1
  - path: target\executable\gitbucket.war.sha256
on_success:
  - ps : |
      Write-Host "on_success"
on_finish:
  - ps: |
      if($env:ENABLE_RDP -eq 'true') {
        # Wait for User RDP operation completion
        $path = "$($env:USERPROFILE)\Desktop\Delete me to continue build.txt"
        Set-Content -Path $path -Value ''    
        Write-Warning "There is 'Delete me to continue build.txt' file has been created on Desktop - delete it to continue the build."
        while($true) { if (-not (Test-Path $path)) { break; } else { Start-Sleep -Seconds 1 } }
      }
cache:
  - C:\Users\appveyor\scoop
  - C:\Users\appveyor\.coursier         -> appveyor.yml
  - C:\Users\appveyor\.ivy2\cache
  - C:\Users\appveyor\.sbt\boot
  - C:\Users\appveyor\.embedmysql
  - C:\Users\appveyor\.embedpostgresql

