version: '{build}'
image: Visual Studio 2017
services:
  - mssql2016
  - postgresql
  - mysql
environment:
 global:
   EnableRemoteDesktop: false
branches:
  except: 
    - gh-pages
init:
install:
  - ps: |
      # Set current directory
      (Get-PSProvider 'FileSystem').Home = 'c:\projects\'
      # Install scoop and required packages
      iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
      scoop install scala
      scoop install sbt
build_script:
  - sbt compile
before_test:
  - ps: |
      # Create MySQL database
      $env:PATH += ';C:\Program Files\MySQL\MySQL Server 5.7\bin\'
      $env:MYSQL_PWD = 'Password12!'
      Invoke-Expression '& mysql -e "create database gitbucket;" --user=root'
      # Create PostgreSQL database
      $env:PATH += ';C:\Program Files\PostgreSQL\9.6\bin\'
      $env:PGUSER = 'postgres'
      $env:PGPASSWORD='Password12!'
      createdb gitbucket
test_script:
  - sbt test
after_test:
  - ps: |
      $url = "https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)"
      $files = Get-ChildItem '.\target\test-reports\*.xml' -ErrorAction Ignore
      foreach ($file in $files) {
          (New-Object 'System.Net.WebClient').UploadFile($url, (Resolve-Path $file))
      }
  - sbt executable
artifacts:
  - path: target\executable\gitbucket.war
  - path: target\executable\gitbucket.war.md5
  - path: target\executable\gitbucket.war.sha1
  - path: target\executable\gitbucket.war.sha256
on_success:
on_failure:
on_finish:
  - ps: |
      if($env:EnableRemoteDesktop){
        $blockRdp = $true; 
        iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
      }
cache:
  - C:\Users\appveyor\scoop\cache
  - C:\Users\appveyor\.coursier         -> appveyor.yml
  - C:\Users\appveyor\.ivy2\cache
  - C:\Users\appveyor\.sbt\boot
  # - C:\Users\appveyor\.embedmysql
  # - C:\Users\appveyor\.embedpostgresql

