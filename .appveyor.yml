version: '{build}'
image: Visual Studio 2017
services:
#  - mssql2016
# - postgresql
# - mysql
#environment:
#  global:
#    TEST_DBMS_SQLServer: true
branches:
  except: 
    - gh-pages
init:
  - ps: |
      # Add
      net localgroup "Remote Desktop Users" appveyor /ADD
      # Remove appveyor account from Administrators group (Required for Embedded Postgres process launch)
      net localgroup "Administrators appveyor" /REMOVE
      #- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
install:
  - ps: |
      (Get-PSProvider 'FileSystem').Home = 'c:\projects\'
      if(Test-Path scoop)
      {
         scoop update
         scoop update scala
         scoop update sbt
      }
      else
      {
        iex (new-object net.webclient).downloadstring('https://get.scoop.sh')
        scoop install scala
        scoop install sbt
      }


build_script:
#  - sbt clean compile
  - sbt compile
test_script:
  - sbt testOnly gitbucket.core.GitBucketCoreModuleSpec.
#   - sbt testOnly *GitBucketCoreModuleSpec*
after_test:
#  - ps: |
#      $url = "https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)"
#      $files = Get-ChildItem '.\target\test-reports\TEST-*.xml' -ErrorAction Ignore
#      foreach ($file in $files) {
#          (New-Object 'System.Net.WebClient').UploadFile($url, (Resolve-Path $file))
#      }
  - sbt executable
artifacts:
  - path: target\executable\gitbucket.war
  - path: target\executable\gitbucket.war.md5
  - path: target\executable\gitbucket.war.sha1
  - path: target\executable\gitbucket.war.sha256
on_success:
  - ps : |
      Write-Host "on_success"
on_finish:
  - ps: |
      # Block RDP
      $path = "$($env:USERPROFILE)\Desktop\Delete me to continue build.txt"
      Set-Content -Path $path -Value ''    
      Write-Warning "There is 'Delete me to continue build.txt' file has been created on Desktop - delete it to continue the build."
      while($true) { if (-not (Test-Path $path)) { break; } else { Start-Sleep -Seconds 1 } }
      #$blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
cache:
  - C:\Users\appveyor\scoop
  - C:\Users\appveyor\.coursier         -> appveyor.yml
  - C:\Users\appveyor\.ivy2\cache
  - C:\Users\appveyor\.sbt\boot
  - C:\Users\appveyor\.embedmysql
  - C:\Users\appveyor\.embedpostgresql

